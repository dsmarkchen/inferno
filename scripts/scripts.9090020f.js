"use strict";angular.module("infernoApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch"]).config(["$routeProvider",function(t,e){t.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/inferno/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/main",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/inferno/main",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/inferno/tx",{templateUrl:"views/tx.html",controller:"TxCtrl",controllerAs:"tx"}).when("/tx",{templateUrl:"views/tx.html",controller:"TxCtrl",controllerAs:"tx"}).when("/inferno/rx",{templateUrl:"views/rx.html",controller:"RxCtrl",controllerAs:"rx"}).when("/rx",{templateUrl:"views/rx.html",controller:"RxCtrl",controllerAs:"rx"}).otherwise({redirectTo:"/"})}]),angular.module("infernoApp").filter("split",function(){return function(t){var e=t.split(/([!,.;?-])/g),l="",r="",o="";return e.forEach(function(t){if(l+=t,52<t.length){return l.split(/(that|where|which|when|who)/g).forEach(n),r+=o,void(l="")}((r+=t).endsWith("--")&&"-"==t||"?"==t||";"==t||"."==t||"!"==t||","==t)&&(r+="\n",l="")}),console.log("line_index:0"),r;function n(t){if("that"==t||"where"==t||"when"==t||"who"==t||"which"==t)return o+="\n ",void(o+=t);o+=t}}}).controller("MainCtrl",["$scope","$location",function(t,e){var l,r;t.txTotalSymbols=localStorage.getItem("totalSymbols"),t.txTotalLHs=localStorage.getItem("totalLHs"),t.rxTotalSymbols=localStorage.getItem("rxTotalSymbols"),t.rxTotalLHs=localStorage.getItem("rxTotalLHs"),t.isActive=function(t){return t===e.path()},t.ie=(l=window.navigator.userAgent,0<(r=l.indexOf("MSIE"))?parseInt(l.substring(r+5,l.indexOf(".",r))):navigator.userAgent.match(/Trident\/7\./)?11:0)}]),angular.module("infernoApp").filter("myCantoFilter",function(){return function(t,e){var l=[];if(""==e)return t;var r=e.split(/[,:]/),o=r[0],n=r[1],i=r[2];return angular.forEach(t,function(t){t.name==o&&t.line>=n&&t.line<i&&l.push(t)}),l}}).controller("RxCtrl",["$scope","$http",function(r,t){r.rxTotalSymbols=60,r.rxTotalLHs=1,r.myQuery="",localStorage.setItem("rxTotalSymbols",r.rxTotalSymbols),localStorage.setItem("rxTotalLHs",r.rxTotalLHs);var o=0,n=[];r.cantoes=[];var i="";t.get("https://dsmarkchen.github.io/inferno/inferno.txt").then(function(t){r.inferno=t.data.split(/\r?\n/),r.inferno.forEach(r.buildone),0<n.length&&r.cantoes.push({line:o-1,text:n.join("<br>")})}),r.buildone=function(t,e){if(0<t.trim().length){if(/^##/.test(t))return 0<n.length&&(r.cantoes.push({name:i,line:o,text:n.join("<br>"),visible:!0}),n=[]),i=t.replace(/^## /,""),void(o=0);var l=t.replace(/--/g,"&#x2012;");n.push(l.trim()),o++,3==n.length&&(r.cantoes.push({name:i,line:o-2,text:n.join("<br>"),visible:!0}),n=[])}}}]),angular.module("infernoApp").controller("TxCtrl",["$scope","fileReader",function(l,t){l.visible=!1,l.parseCSV=function(t,e){var l=t.split(/\r\n|\r|\n/g);for(var r in l){for(var o,n=l[r].split(e=e||","),i=n.length-1;0<=i;i--)'"'==n[i].replace(/"\s+$/,'"').charAt(n[i].length-1)?1<(o=n[i].replace(/^\s+"/,'"')).length&&'"'==o.charAt(0)?n[i]=n[i].replace(/^\s*"|"\s*$/g,"").replace(/""/g,'"'):i?n.splice(i-1,2,[n[i-1],n[i]].join(e)):n=n.shift().split(e).concat(n):n[i].replace(/""/g,'"');l[r]=n}return l},l.getFile=function(){l.progress=0,l.textSrc="",l.totalSymbols=0,l.totalLHs=0,localStorage.setItem("totalSymbols",l.totalSymbols),localStorage.setItem("totalLHs",l.totalLHs),t.readAsText(l.file,l).then(function(t){l.textSrc=t,l.lines=l.parseCSV(t,","),l.lines.forEach(function(t){/LH/.test(t)&&(l.totalSymbols+=t.length-4,l.totalLHs++)}),localStorage.setItem("totalSymbols",l.totalSymbols),localStorage.setItem("totalLHs",l.totalLHs),console.log(typeof t),console.log(typeof l.textSrc)})},l.$on("fileProgress",function(t,e){l.progress=e.loaded/e.total})}]).directive("ngFileSelect",function(){return{link:function(e,t){t.bind("change",function(t){e.file=(t.srcElement||t.target).files[0],e.getFile()})}}}).factory("fileReader",["$q","$log",function(r,t){t.log("fileReader");return{readAsText:function(t,e){var l=r.defer();return function(t,e){var l=new FileReader;return l.onload=function(t,e,l){return function(){l.$apply(function(){e.resolve(t.result)})}}(l,t,e),l.onerror=function(t,e,l){return function(){l.$apply(function(){e.reject(t.result)})}}(l,t,e),l.onprogress=function(t,e){return function(t){e.$broadcast("fileProgress",{total:t.total,loaded:t.loaded})}}(0,e),l}(l,e).readAsText(t),l.promise}}}]),angular.module("infernoApp").run(["$templateCache",function(t){t.put("views/main.html",'<div class="jumbotron jumbotron-fluid"> <div class="container"> <div class="block"> <h1 class="animated fadeInUp">Inferno</h1> <div ng-hide="ie == 0"> <p class="animated fadeInUp">IE {{ie}}</p> </div> </div> </div> </div> <div class="container"> <p> <strong> Summary </strong> </p> <table class="table table-striped"> <tr> <th> </th> <th> Tx</th> <th> Rx</th> <th> Percentage</th> </tr> <tr> <td> symbols </td> <td>{{txTotalSymbols}} </td> <td>{{rxTotalSymbols}} </td> <td>{{rxTotalSymbols /txTotalSymbols * 100 | number : 2}} </td> </tr> <tr><td> sequences </td> <td> {{txTotalLHs}} </td> <td> {{rxTotalLHs}} </td> <td> {{rxTotalLHs/txTotalLHs * 100 | number : 2}} </td> </tr> </table> </div> '),t.put("views/rx.html",'<div class="container"> <div class="row"> <div class="col-md-3 col-sm-12"> <form> <div class="form-group"> <div class="input-group"> <div class="input-group-addon"><i class="fa fa-search"></i></div> <input type="text" class="form-control" placeholder="query: start, end" ng-model="myQuery"> </div> </div> </form> </div> <div class="col-md-9 col-sm-12"> <div ng-repeat="linex in cantoes | myCantoFilter: myQuery  track by $index "> <div class="row" ng-if="linex.visible"> <div class="col-2"> <p class="line">{{linex.name}}:{{linex.line}} </p> </div> <div class="col-10"> <div class="block"> <p class="canto" ng-bind-html="linex.text"></p> </div> </div> </div> </div> </div> </div> </div> '),t.put("views/tx.html",'<div class="container"> <form> <div class="row"> <div class="col-md-12"> <input type="file" ng-file-select="onFileSelect($files)" class="form-control-file border"> </div> </div> </form> <br> <b>Statistics:</b><br> <table class="table table-striped"> <tr> <th>Name</th> <th>Counts </th> </tr> <tr> <td>Total Symbols </td> <td>{{totalSymbols}}</td> </tr> <tr> <td>Total Sequences </td> <td>{{totalLHs}}</td> </tr> </table> <b>Preview:</b> <input ng-model="visible" type="checkbox"> <br> <i ng-hide="textSrc">No text file choosed</i> <pre ng-show="visible">{{textSrc}}</pre> <br> <b>Progress:</b> <progress value="{{progress}}"></progress> </div> ')}]);